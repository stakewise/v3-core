[
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "caller",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "vault",
        "type": "address"
      }
    ],
    "name": "VaultAdded",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "factory",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "bool",
        "name": "isSupported",
        "type": "bool"
      }
    ],
    "name": "VaultFactoryUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "implementation",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "bool",
            "name": "canUpgradeTo",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "canMintOsToken",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "canBurnOsToken",
            "type": "bool"
          }
        ],
        "indexed": false,
        "internalType": "struct IVaultsRegistry.VaultImplConfig",
        "name": "config",
        "type": "tuple"
      }
    ],
    "name": "VaultImplConfigUpdated",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "vault",
        "type": "address"
      }
    ],
    "name": "addVault",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "factory",
        "type": "address"
      }
    ],
    "name": "factories",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "factory",
        "type": "address"
      },
      {
        "internalType": "bool",
        "name": "isSupported",
        "type": "bool"
      }
    ],
    "name": "updateVaultFactory",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "implementation",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "bool",
            "name": "canUpgradeTo",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "canMintOsToken",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "canBurnOsToken",
            "type": "bool"
          }
        ],
        "internalType": "struct IVaultsRegistry.VaultImplConfig",
        "name": "config",
        "type": "tuple"
      }
    ],
    "name": "updateVaultImplementation",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "implementation",
        "type": "address"
      }
    ],
    "name": "vaultImplConfigs",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "vault",
        "type": "address"
      }
    ],
    "name": "vaults",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
]
