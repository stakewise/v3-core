{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x83A7efE3895E6B90F65d1B796ba69D04C269E7aB",
      "txHash": "0x206fc46b267abecfafba65ebe5613edcced9ff9c4b06bc36d750d6fd618cd6d6",
      "kind": "uups"
    }
  ],
  "impls": {
    "0e2ef862f3bc452365f1186ccccd4cd2f64388ac276a2823af2b0c2d764382e9": {
      "address": "0xB20516dD48eb6CceE7Caf5046AC6E16617e746d7",
      "txHash": "0xe2802f3fd758c164ccf6b208f32858e06e62b1233f113e12694699c38bfb1e63",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_pendingOwner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Ownable2StepUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Ownable2StepUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:70"
          },
          {
            "label": "prevRewardsRoot",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:32"
          },
          {
            "label": "rewardsRoot",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:35"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_struct(RewardSync)7032_storage)",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:38"
          },
          {
            "label": "rewardsNonce",
            "offset": 0,
            "slot": "254",
            "type": "t_uint96",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:41"
          },
          {
            "label": "lastRewardsTimestamp",
            "offset": 12,
            "slot": "254",
            "type": "t_uint64",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:44"
          },
          {
            "label": "rewardsDelay",
            "offset": 20,
            "slot": "254",
            "type": "t_uint64",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:224"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KeeperValidators",
            "src": "contracts/keeper/KeeperValidators.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_int160": {
            "label": "int160",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(RewardSync)7032_storage)": {
            "label": "mapping(address => struct IKeeperRewards.RewardSync)",
            "numberOfBytes": "32"
          },
          "t_struct(RewardSync)7032_storage": {
            "label": "struct IKeeperRewards.RewardSync",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint96",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_int160",
                "offset": 12,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "f428891634f92665c3c104b5109dc02a0353b3a5227fb3d5fb38e902ae7ac956": {
      "address": "0x785f9C7f5F17E5af59C8dcafeB64c08F4D050233",
      "txHash": "0xe148c966d9e7c42305be0c764f7137a64b414e0c256a384eac90a449d51aa3cd",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:19"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:22"
          },
          {
            "label": "balanceOf",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:28"
          },
          {
            "label": "allowance",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:31"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_initialDomainSeparator",
            "offset": 0,
            "slot": "156",
            "type": "t_bytes32",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:189"
          },
          {
            "label": "_totalShares",
            "offset": 0,
            "slot": "207",
            "type": "t_uint128",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:24"
          },
          {
            "label": "_totalAssets",
            "offset": 16,
            "slot": "207",
            "type": "t_uint128",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:25"
          },
          {
            "label": "_capacity",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:127"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "VaultAdmin",
            "src": "contracts/vaults/modules/VaultAdmin.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultAdmin",
            "src": "contracts/vaults/modules/VaultAdmin.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultVersion",
            "src": "contracts/vaults/modules/VaultVersion.sol:58"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "VaultFee",
            "src": "contracts/vaults/modules/VaultFee.sol:20"
          },
          {
            "label": "feePercent",
            "offset": 20,
            "slot": "360",
            "type": "t_uint16",
            "contract": "VaultFee",
            "src": "contracts/vaults/modules/VaultFee.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "361",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultFee",
            "src": "contracts/vaults/modules/VaultFee.sol:60"
          },
          {
            "label": "queuedShares",
            "offset": 0,
            "slot": "411",
            "type": "t_uint96",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:26"
          },
          {
            "label": "unclaimedAssets",
            "offset": 12,
            "slot": "411",
            "type": "t_uint96",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:29"
          },
          {
            "label": "_exitQueueNextUpdate",
            "offset": 24,
            "slot": "411",
            "type": "t_uint64",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:31"
          },
          {
            "label": "_exitQueue",
            "offset": 0,
            "slot": "412",
            "type": "t_struct(History)9071_storage",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:33"
          },
          {
            "label": "_exitRequests",
            "offset": 0,
            "slot": "413",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "414",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:178"
          },
          {
            "label": "validatorsRoot",
            "offset": 0,
            "slot": "464",
            "type": "t_bytes32",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:29"
          },
          {
            "label": "validatorIndex",
            "offset": 0,
            "slot": "465",
            "type": "t_uint256",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:32"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "466",
            "type": "t_address",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "467",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:192"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "517",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultEnterExit",
            "src": "contracts/vaults/modules/VaultEnterExit.sol:194"
          },
          {
            "label": "mevEscrow",
            "offset": 0,
            "slot": "567",
            "type": "t_contract(IMevEscrow)7215",
            "contract": "VaultEthStaking",
            "src": "contracts/vaults/modules/VaultEthStaking.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "568",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultEthStaking",
            "src": "contracts/vaults/modules/VaultEthStaking.sol:152"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)9066_storage)dyn_storage": {
            "label": "struct ExitQueue.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IMevEscrow)7215": {
            "label": "contract IMevEscrow",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)9066_storage": {
            "label": "struct ExitQueue.Checkpoint",
            "members": [
              {
                "label": "sharesCounter",
                "type": "t_uint160",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "exitedAssets",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)9071_storage": {
            "label": "struct ExitQueue.History",
            "members": [
              {
                "label": "checkpoints",
                "type": "t_array(t_struct(Checkpoint)9066_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint160": {
            "label": "uint160",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "2649db1c71a6eb40b9c13698caa15eb981ea5a4787ae9c0e85fef99838af9440": {
      "address": "0x4dDDde49e4633a489b69E0Df4F3B1419543a0955",
      "txHash": "0x1cd1b38f85da9515a892e5e8f50b4140a1cac5cfee371794a95e5d1d030ed2f1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:19"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:22"
          },
          {
            "label": "balanceOf",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:28"
          },
          {
            "label": "allowance",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:31"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_initialDomainSeparator",
            "offset": 0,
            "slot": "156",
            "type": "t_bytes32",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:189"
          },
          {
            "label": "_totalShares",
            "offset": 0,
            "slot": "207",
            "type": "t_uint128",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:24"
          },
          {
            "label": "_totalAssets",
            "offset": 16,
            "slot": "207",
            "type": "t_uint128",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:25"
          },
          {
            "label": "_capacity",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:127"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "VaultAdmin",
            "src": "contracts/vaults/modules/VaultAdmin.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultAdmin",
            "src": "contracts/vaults/modules/VaultAdmin.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultVersion",
            "src": "contracts/vaults/modules/VaultVersion.sol:58"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "VaultFee",
            "src": "contracts/vaults/modules/VaultFee.sol:20"
          },
          {
            "label": "feePercent",
            "offset": 20,
            "slot": "360",
            "type": "t_uint16",
            "contract": "VaultFee",
            "src": "contracts/vaults/modules/VaultFee.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "361",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultFee",
            "src": "contracts/vaults/modules/VaultFee.sol:60"
          },
          {
            "label": "queuedShares",
            "offset": 0,
            "slot": "411",
            "type": "t_uint96",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:26"
          },
          {
            "label": "unclaimedAssets",
            "offset": 12,
            "slot": "411",
            "type": "t_uint96",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:29"
          },
          {
            "label": "_exitQueueNextUpdate",
            "offset": 24,
            "slot": "411",
            "type": "t_uint64",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:31"
          },
          {
            "label": "_exitQueue",
            "offset": 0,
            "slot": "412",
            "type": "t_struct(History)9071_storage",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:33"
          },
          {
            "label": "_exitRequests",
            "offset": 0,
            "slot": "413",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "414",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:178"
          },
          {
            "label": "validatorsRoot",
            "offset": 0,
            "slot": "464",
            "type": "t_bytes32",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:29"
          },
          {
            "label": "validatorIndex",
            "offset": 0,
            "slot": "465",
            "type": "t_uint256",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:32"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "466",
            "type": "t_address",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "467",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:192"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "517",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultEnterExit",
            "src": "contracts/vaults/modules/VaultEnterExit.sol:194"
          },
          {
            "label": "mevEscrow",
            "offset": 0,
            "slot": "567",
            "type": "t_contract(IMevEscrow)7215",
            "contract": "VaultEthStaking",
            "src": "contracts/vaults/modules/VaultEthStaking.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "568",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultEthStaking",
            "src": "contracts/vaults/modules/VaultEthStaking.sol:152"
          },
          {
            "label": "whitelister",
            "offset": 0,
            "slot": "618",
            "type": "t_address",
            "contract": "VaultWhitelist",
            "src": "contracts/vaults/modules/VaultWhitelist.sol:17"
          },
          {
            "label": "whitelistRoot",
            "offset": 0,
            "slot": "619",
            "type": "t_bytes32",
            "contract": "VaultWhitelist",
            "src": "contracts/vaults/modules/VaultWhitelist.sol:20"
          },
          {
            "label": "whitelistedAccounts",
            "offset": 0,
            "slot": "620",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VaultWhitelist",
            "src": "contracts/vaults/modules/VaultWhitelist.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "621",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultWhitelist",
            "src": "contracts/vaults/modules/VaultWhitelist.sol:100"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)9066_storage)dyn_storage": {
            "label": "struct ExitQueue.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IMevEscrow)7215": {
            "label": "contract IMevEscrow",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)9066_storage": {
            "label": "struct ExitQueue.Checkpoint",
            "members": [
              {
                "label": "sharesCounter",
                "type": "t_uint160",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "exitedAssets",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)9071_storage": {
            "label": "struct ExitQueue.History",
            "members": [
              {
                "label": "checkpoints",
                "type": "t_array(t_struct(Checkpoint)9066_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint160": {
            "label": "uint160",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    }
  }
}
