{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x996461A815191bDE7FAdb7ABAbA9053cd6969CAA",
      "txHash": "0x5f980b392497fec8ed934d0807247cfd88abbbba0d2b9c929e21178083ac5035",
      "kind": "uups"
    }
  ],
  "impls": {
    "88439e1ca25536f37187ac10ae8abee8afc4d38549f77aa2be1be3895042834c": {
      "address": "0x2e5123758FeE593D7086c68dDB39F6122e6968cf",
      "txHash": "0x110d7031e9f866eec7094a81ef5a6f6cbb8af18bcdd298282683d1fa3acbafa7",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_pendingOwner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Ownable2StepUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Ownable2StepUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:70"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_struct(Reward)7574_storage)",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:38"
          },
          {
            "label": "unlockedMevRewards",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_struct(UnlockedMevReward)7579_storage)",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:41"
          },
          {
            "label": "rewardsDelay",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:44"
          },
          {
            "label": "prevRewardsRoot",
            "offset": 0,
            "slot": "254",
            "type": "t_bytes32",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:47"
          },
          {
            "label": "rewardsRoot",
            "offset": 0,
            "slot": "255",
            "type": "t_bytes32",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:50"
          },
          {
            "label": "avgRewardPerSecond",
            "offset": 0,
            "slot": "256",
            "type": "t_uint128",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:53"
          },
          {
            "label": "lastRewardsTimestamp",
            "offset": 16,
            "slot": "256",
            "type": "t_uint64",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:56"
          },
          {
            "label": "rewardsNonce",
            "offset": 24,
            "slot": "256",
            "type": "t_uint64",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:59"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KeeperRewards",
            "src": "contracts/keeper/KeeperRewards.sol:268"
          },
          {
            "label": "exitSignaturesNonces",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "KeeperValidators",
            "src": "contracts/keeper/KeeperValidators.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)50_storage",
            "contract": "KeeperValidators",
            "src": "contracts/keeper/KeeperValidators.sol:117"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_int192": {
            "label": "int192",
            "numberOfBytes": "24"
          },
          "t_mapping(t_address,t_struct(Reward)7574_storage)": {
            "label": "mapping(address => struct IKeeperRewards.Reward)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UnlockedMevReward)7579_storage)": {
            "label": "mapping(address => struct IKeeperRewards.UnlockedMevReward)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Reward)7574_storage": {
            "label": "struct IKeeperRewards.Reward",
            "members": [
              {
                "label": "assets",
                "type": "t_int192",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nonce",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(UnlockedMevReward)7579_storage": {
            "label": "struct IKeeperRewards.UnlockedMevReward",
            "members": [
              {
                "label": "assets",
                "type": "t_uint192",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nonce",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint192": {
            "label": "uint192",
            "numberOfBytes": "24"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "218801e32328cda107ad905c7adbf39812e3586c84c082d3d137fdb70065f14d": {
      "address": "0xB12A4a519770aA4A0F978cD19d8Ae5162A5f1Fcb",
      "txHash": "0x5b9be67f4e021ea2b91c169ee4fadc3d411f92dd2fc85cafe7b43108e9bc1d8c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:19"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:22"
          },
          {
            "label": "balanceOf",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:28"
          },
          {
            "label": "allowance",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:31"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_initialDomainSeparator",
            "offset": 0,
            "slot": "156",
            "type": "t_bytes32",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:208"
          },
          {
            "label": "_totalShares",
            "offset": 0,
            "slot": "207",
            "type": "t_uint128",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:20"
          },
          {
            "label": "_totalAssets",
            "offset": 16,
            "slot": "207",
            "type": "t_uint128",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:21"
          },
          {
            "label": "_capacity",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:125"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "VaultAdmin",
            "src": "contracts/vaults/modules/VaultAdmin.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultAdmin",
            "src": "contracts/vaults/modules/VaultAdmin.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultVersion",
            "src": "contracts/vaults/modules/VaultVersion.sol:56"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "VaultFee",
            "src": "contracts/vaults/modules/VaultFee.sol:20"
          },
          {
            "label": "feePercent",
            "offset": 20,
            "slot": "360",
            "type": "t_uint16",
            "contract": "VaultFee",
            "src": "contracts/vaults/modules/VaultFee.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "361",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultFee",
            "src": "contracts/vaults/modules/VaultFee.sol:61"
          },
          {
            "label": "queuedShares",
            "offset": 0,
            "slot": "411",
            "type": "t_uint96",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:26"
          },
          {
            "label": "_unclaimedAssets",
            "offset": 12,
            "slot": "411",
            "type": "t_uint96",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:28"
          },
          {
            "label": "_exitQueueNextUpdate",
            "offset": 24,
            "slot": "411",
            "type": "t_uint64",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:29"
          },
          {
            "label": "_exitQueue",
            "offset": 0,
            "slot": "412",
            "type": "t_struct(History)10160_storage",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:31"
          },
          {
            "label": "_exitRequests",
            "offset": 0,
            "slot": "413",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "414",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:178"
          },
          {
            "label": "_validatorIndex",
            "offset": 0,
            "slot": "464",
            "type": "t_uint256",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:27"
          },
          {
            "label": "_validatorsRoot",
            "offset": 0,
            "slot": "465",
            "type": "t_bytes32",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:28"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "466",
            "type": "t_address",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "467",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:192"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "517",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultEnterExit",
            "src": "contracts/vaults/modules/VaultEnterExit.sol:182"
          },
          {
            "label": "_positions",
            "offset": 0,
            "slot": "567",
            "type": "t_mapping(t_address,t_struct(OsTokenPosition)8496_storage)",
            "contract": "VaultOsToken",
            "src": "contracts/vaults/modules/VaultOsToken.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "568",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultOsToken",
            "src": "contracts/vaults/modules/VaultOsToken.sol:392"
          },
          {
            "label": "_ownMevEscrow",
            "offset": 0,
            "slot": "618",
            "type": "t_address",
            "contract": "VaultMev",
            "src": "contracts/vaults/modules/VaultMev.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "619",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultMev",
            "src": "contracts/vaults/modules/VaultMev.sol:75"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "669",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultEthStaking",
            "src": "contracts/vaults/modules/VaultEthStaking.sol:150"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)10155_storage)dyn_storage": {
            "label": "struct ExitQueue.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(OsTokenPosition)8496_storage)": {
            "label": "mapping(address => struct IVaultOsToken.OsTokenPosition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)10155_storage": {
            "label": "struct ExitQueue.Checkpoint",
            "members": [
              {
                "label": "sharesCounter",
                "type": "t_uint160",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "exitedAssets",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)10160_storage": {
            "label": "struct ExitQueue.History",
            "members": [
              {
                "label": "checkpoints",
                "type": "t_array(t_struct(Checkpoint)10155_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OsTokenPosition)8496_storage": {
            "label": "struct IVaultOsToken.OsTokenPosition",
            "members": [
              {
                "label": "shares",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cumulativeFeePerShare",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint160": {
            "label": "uint160",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "6810bc1f3db23b530fe953bbf1a080d4312ca6899d44d5830bc928158feb722e": {
      "address": "0x0778aA5C0118CAa2Ad205BfCB7D02F097784D2db",
      "txHash": "0x5b470c0c454eeedb5dd8d5b604b37def6237b766ebdeda6c3c02314d581e8587",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:19"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:22"
          },
          {
            "label": "balanceOf",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:28"
          },
          {
            "label": "allowance",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:31"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_initialDomainSeparator",
            "offset": 0,
            "slot": "156",
            "type": "t_bytes32",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/base/ERC20Upgradeable.sol:208"
          },
          {
            "label": "_totalShares",
            "offset": 0,
            "slot": "207",
            "type": "t_uint128",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:20"
          },
          {
            "label": "_totalAssets",
            "offset": 16,
            "slot": "207",
            "type": "t_uint128",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:21"
          },
          {
            "label": "_capacity",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultToken",
            "src": "contracts/vaults/modules/VaultToken.sol:125"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "VaultAdmin",
            "src": "contracts/vaults/modules/VaultAdmin.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultAdmin",
            "src": "contracts/vaults/modules/VaultAdmin.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultVersion",
            "src": "contracts/vaults/modules/VaultVersion.sol:56"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "VaultFee",
            "src": "contracts/vaults/modules/VaultFee.sol:20"
          },
          {
            "label": "feePercent",
            "offset": 20,
            "slot": "360",
            "type": "t_uint16",
            "contract": "VaultFee",
            "src": "contracts/vaults/modules/VaultFee.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "361",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultFee",
            "src": "contracts/vaults/modules/VaultFee.sol:61"
          },
          {
            "label": "queuedShares",
            "offset": 0,
            "slot": "411",
            "type": "t_uint96",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:26"
          },
          {
            "label": "_unclaimedAssets",
            "offset": 12,
            "slot": "411",
            "type": "t_uint96",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:28"
          },
          {
            "label": "_exitQueueNextUpdate",
            "offset": 24,
            "slot": "411",
            "type": "t_uint64",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:29"
          },
          {
            "label": "_exitQueue",
            "offset": 0,
            "slot": "412",
            "type": "t_struct(History)10160_storage",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:31"
          },
          {
            "label": "_exitRequests",
            "offset": 0,
            "slot": "413",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "414",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultState",
            "src": "contracts/vaults/modules/VaultState.sol:178"
          },
          {
            "label": "_validatorIndex",
            "offset": 0,
            "slot": "464",
            "type": "t_uint256",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:27"
          },
          {
            "label": "_validatorsRoot",
            "offset": 0,
            "slot": "465",
            "type": "t_bytes32",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:28"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "466",
            "type": "t_address",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "467",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultValidators",
            "src": "contracts/vaults/modules/VaultValidators.sol:192"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "517",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultEnterExit",
            "src": "contracts/vaults/modules/VaultEnterExit.sol:182"
          },
          {
            "label": "_positions",
            "offset": 0,
            "slot": "567",
            "type": "t_mapping(t_address,t_struct(OsTokenPosition)8496_storage)",
            "contract": "VaultOsToken",
            "src": "contracts/vaults/modules/VaultOsToken.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "568",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultOsToken",
            "src": "contracts/vaults/modules/VaultOsToken.sol:392"
          },
          {
            "label": "_ownMevEscrow",
            "offset": 0,
            "slot": "618",
            "type": "t_address",
            "contract": "VaultMev",
            "src": "contracts/vaults/modules/VaultMev.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "619",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultMev",
            "src": "contracts/vaults/modules/VaultMev.sol:75"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "669",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultEthStaking",
            "src": "contracts/vaults/modules/VaultEthStaking.sol:150"
          },
          {
            "label": "whitelister",
            "offset": 0,
            "slot": "719",
            "type": "t_address",
            "contract": "VaultWhitelist",
            "src": "contracts/vaults/modules/VaultWhitelist.sol:16"
          },
          {
            "label": "whitelistedAccounts",
            "offset": 0,
            "slot": "720",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VaultWhitelist",
            "src": "contracts/vaults/modules/VaultWhitelist.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "721",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultWhitelist",
            "src": "contracts/vaults/modules/VaultWhitelist.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)10155_storage)dyn_storage": {
            "label": "struct ExitQueue.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(OsTokenPosition)8496_storage)": {
            "label": "mapping(address => struct IVaultOsToken.OsTokenPosition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)10155_storage": {
            "label": "struct ExitQueue.Checkpoint",
            "members": [
              {
                "label": "sharesCounter",
                "type": "t_uint160",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "exitedAssets",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)10160_storage": {
            "label": "struct ExitQueue.History",
            "members": [
              {
                "label": "checkpoints",
                "type": "t_array(t_struct(Checkpoint)10155_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OsTokenPosition)8496_storage": {
            "label": "struct IVaultOsToken.OsTokenPosition",
            "members": [
              {
                "label": "shares",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cumulativeFeePerShare",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint160": {
            "label": "uint160",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    }
  }
}
